import { Injectable } from '@angular/core';
import {HttpClient} from '@angular/common/http';
import {Blog } from './blog.model';

@Injectable({
  providedIn: 'root'
})
export class BlogService {

  readonly baseURL = 'http://localhost:8080/bloglist';

  selectedblog:Blog;
  Blog:Blog[];

  products:Blog[]=[
    new Blog(1,'Event Emitters Component Interactions in Angular Ionic','This article is more about understanding the Event Emitters in Angular and Ionic. Data flow is the most important when you build an application to communicate with components. Event Emitters will help you to even bind using @Input @Output decorators. Here is a simple example to display and update the user profile using Angular Event Emitters. For this demo I choose Ionic framework for better experience. Take a quick look at the live demo.','assets/img/product/inspired-product/i11.png',10,'March','Web Development'),
    new Blog(2,'New Ionic 5 Angular 8 Display, Update and Delete Records with RxJS','This post is about displaying the API records with delete and update actions using new Ionic and Angular reactive programming. This is a continuation of Ionic Angular series and it explains to you how to distribute the data between the components using RxJS method like BehaviorSubject. All of the feed API responses/records storing in a reactive object, This help the application DOM works seamlessly with update and delete operations. Implement this to your side project and enrich your applications.','assets/img/product/inspired-product/i12.png',1,'Nov','Web Development'),
    new Blog(3,'Ionic 5 and Angular 8: Restful API User Authentication Login and Signup using Guard and Resolver','This is a continuation of my previous article creating an Ionic Angular project with welcome and tabs home page. Today’s post explains how to implement login authentication system for your Ionic Angular application with guards and resolvers. It will show you how to log in with a user and store the user data and protect the routes, so it deals with token-based authentication. Every user details will be stored in an external database and a PHP based API is used in the backend for handling this authentication.','assets/img/product/inspired-product/i13.png',10,'Sep','Web Development'),
    new Blog(4,'Angular 8 Lazy Load Routing.','Angular announced a new version 8.0 and its improved few methods and the compiler to reduce the bundle size 40% less. Now time to update my previous article Angular Routing with Lazy loading Design Pattern. This post is about how to upgrade your Angular 7 application with Angular 8 configurations and changing the lazy load routing with Angular 8 loadChilder promise method. Take a look the setup video to understand more.','assets/img/product/inspired-product/i14.png',6,'June','Web Development'),
    new Blog(5,'Angular Routing with Lazy Loading Design Pattern','Lazy loading is a design pattern to implement large scale Angular projects. Using this system design we can load the components based on the application need. This way we can increase the application performance. This article is a continues of Angular routing project, please follow the previous parts for better understanding. This will explain how to covert default component-based structure to Angular lazy loading pattern.','assets/img/product/inspired-product/i15.png',2,'Thur','Web Development'),
    new Blog(6,'Generating PDF Documents on the Fly Using Nodejs and Kue','PDF documents are a very common form of hypermedia documents. Whether it’s books, bills, or invoices we consume PDF documents on a daily basis. In this article, we are going to learn how to generate PDF documents using Node.js and Worker queue called Kue. PDF generation is used in products such as E-commerce based applications, airline tickets, hotel booking, etc. We can use the same principle which I am going to show you below and apply it to implement the feature.','assets/img/product/inspired-product/i16.png',3,'April','Web Development'),
    new Blog(7,'Angular Dynamic Routes for User Profiles','Are you working with social applications and user profiles? This post is about implementing dynamic routes for Angular application with basic route validations. This article is a part of Angular routing series for better understanding, please check my previous articles. Here you find importing the dynamic route value and validating with a regular expression for protecting the application routes.','assets/img/product/inspired-product/i17.png',4,'March','Web Development'),
    new Blog(8,'Ionic Electron Desktop App','Ionic has an excellent Angular framework for creating mobile applications for iOS and Android. Ionic team is planning to launch an update with Angular 6.0 version, right now Ionic 4.0 is in beta development. This post is about using ElectronJS for JavaScript based applications, using this you can convert an application into a Desktop application for MacOS, Windows and Linux. Take a look at this article and follow the steps to generate a desktop application for Ionic.','assets/img/product/inspired-product/i18.png',14,'Oct','Web Development'),
    new Blog(9,'Social Login using Angular and RESTful APIs','There are a number of advantages to implementing social login in your web applications. First of all, it best secures the user credentials, the user can use a single login for accessing multiple sites, this can automatically access the user details for further use, and many such. This article is about how to implement the social login with Facebook and Google using Angular and RESTful API. This social login helps to store social data of the logged in user into the database, so that it provides you valid user data like email, name, and others. Let’s see how this works, follow the live demo and code below.','assets/img/product/inspired-product/i19.png',29,'July','Web Development'),
    new Blog(10,'PayPal Express Checkout with React JS and PHP RESTful','There are several payment options available in the market today. PayPal checkout option is one among them. In my previous articles, I have already discussed few payment options - Braintree PayPal using PHP, Payment system and PayPal Express Checkout with PHP and MySQL. These are the most viewed and trending articles till this day. Today, let’s see how the PayPal Express Checkout works with React JS.','assets/img/product/inspired-product/i20.png',16,'April','Web Development'),
    new Blog(11,'Push Notifications for Web Browsers','How do you increase the site’s traffic? E-commerce businesses’ main goal is to keep engage their existed subscribers and get the new visitors. There are many ways to grow site’s traffic and customer engagement - by sending email notifications, SMS alerts, through social media and do web push notifications. Today, we are going to see how push notifications work for web browsers. These are the notifications that are sent to the users through desktop and mobile browsers. These notifications are delivered on a user’s desktop or mobile browser — regardless of whether or not the user is on the website. These notifications allow users to get timely updates from sites they love and allow developers to effectively re-engage them with relevant content to increase site’s traffic. Let’s start how this works.','assets/img/product/inspired-product/i21.png',14,'Jan','Web Development'),
    new Blog(12,'Ionic Angular Lazy Loading with Child Components','We have already discussed few articles on Ionic. Latest Ionic 3 came up with lazy loading concepts. Changing Ionic apps to use lazy loading significantly boost up the app performance. This actually improves the app speed, instead of loading everything in root application module file. This allows doing the work in sync with when your users want it to happen. This article explains to you how to modify the existing default Ionic app and apply lazy load concepts like working with providers, shared/child components. It process by loading chunks of code such as child components when it’s requested not when the app is loaded. Use this feature and enrich your application. Watch the video, you understand it better.','assets/img/product/inspired-product/i22.png',25,'Dec','Web Development'),
    new Blog(13,'Ionic and Angular: Native Camera with Restful Upload.','It is very simple to trigger any camera device and show the resulting output. This has been discussed in my article to take multiple photos with delete action using Ionic and AngularJS. Here is a problem. You can only see the image temporarily, since it has not been stored in any storage. Today’s article will explain to you how to store the captured image in a database, so that you can use it later. I’ll be using RESTful API to achieve this. Look into the demo below and also the code to see how to connect with RESTful API to store any captured image into a database.','assets/img/product/inspired-product/i23.png',3,'Dec','Web Development'),
    new Blog(14,'Ionic and Angular: Infinite Scrolling with RESTful APIs','We have seen series of posts on developing a mobile application using Ionic and AngularJS. One of my previous articles which deal with insertion and deletion of posts using RESTful API. Similarly, today’s post makes use of RESTful API. These days, a single page web applications are most commonly used ones, because of which there is a need to show loads of data on the same page as we keep on scrolling. This infinite scrolling avoids pagination system.','assets/img/product/inspired-product/i24.png',13,'Nov','Web Development'),
    new Blog(15,'Login with Facebook and Google using ReactJS and RESTful APIs','There are a number of advantages to implementing social login in your web applications. First of all, it best secures the user credentials, the user can use a single login for accessing multiple sites, this can automatically access the user details for further use, and many such. This article is about how to implement the social login with Facebook and Google using ReactJS and RESTful API. This social login helps to store social data of the logged in user into the database. So that it provides you valid user data like email, name, and others. This is a continuation of ReactJS Welcome Page with Routing Tutorial. Let’s see how this works, follow the live demo and code below.','assets/img/product/inspired-product/i25.png',6,'Nov','Web Development'),
    new Blog(16,'React JS and PHP Restful API User Authentication for Login and Signup.','Here is the continued article on my previous post for creating a welcome with login and logout using ReactJS. Today’s post explains how to implement login authentication system for your React JS applications. It will show you how to log in with a user and store the user session, so it deals with token-based authentication. Since we are using token-based authentication, it protects if any unauthorized request is made and notices for a new login if required. This makes your application’s authentication to be more secure compared with any other authentication system. Every user details will be stored in an external database and a PHP based API is used in the backend for handling this authentication. Hope you’ll find it more easily using this as your authentication system in your ReactJS projects. Let’s look into the live demo and follow the below code.','assets/img/product/inspired-product/i26.png',23,'Oct','Web Development'),
    new Blog(17,'Angular 4 TypeScript Google Account Email Login and Routing','A few days back, I read an article about Google Authentication. A bug was mentioned in the article, that Google login status can be easily accessed by calling out some images. After reading the article, I got an idea that why dont we use this bug in a positive approach to validate user authentication. This same idea has been implemented in this post to do email validation. I have used Google email login system (not OAuth) using Angular 4 CLI project. Take a look at the live demo ( Make sure to login into your Google account in another tab to do this validation).','assets/img/product/inspired-product/i27.png',7,'Sep','Web Development'),
    new Blog(18,'Ionic 3 and Angular 4: Insert and Delete with Token Based Restful API','This is the continued series of article on developing a mobile app with Ionic and Angular JS. This post deals with updating and deleting any post on the application. This also explains how to show the loading image by making an Ajax call. While deleting a post, it will show an alert message to confirm whether to delete or not. This post is all about this. Hope you all make use of this series of articles on Ionic and Angular to build your own mobile app.','assets/img/product/inspired-product/i28.png',21,'Aug','Web Development'),
    new Blog(19,'Ionic Split Pane with Login and Logout System.','I received a tutorial request from one of my blog readers to implement Ionic Split Pane with the login system. Ionic has been improving and releasing new desktop layout features. This post is an enhancement to my previous application. SplitPane is the new component introduced in Ionic 2.2.0. This targets to create apps of any screen size like desktops and tablets. With this, it is easy to show a side menu with side-by-side navigation controllers. Let’s see how we do this, and follow the demo below for more details.','assets/img/product/inspired-product/i29.png',8,'Aug','Web Development')
  ]

  phpblog:Blog[]=[
    new Blog(20,'Microsoft Azure Virtual Machines Setup with Ubuntu and XAMPP PHP Server','Microsoft Azure is another great alternate cloud service and it is offering a one-year free trial with $200 credit. This post is almost similar to my previous Cloud service article. This will explain to you how to set up a virtual machine instance with secure firewall rules and setting up a XAMPP(PHP Maria DB Server) using the Ubuntu operating system. Microsoft Azure has lots of free project management services. This is very useful for your side projects.','assets/img/product/inspired-product/i40.png',10,'April','Web Development'),
    new Blog(21,'Google Cloud VM Instance Setup with Ubuntu and XAMPP PHP Server','Google cloud platform is a cloud computing service and a perfect alternate for Amazon Webservices. Nowadays most of the top companies are moving towards Google services for better results. Google cloud platform is offering a $300 free trial for one year. This post is about how to set up VM instances with firewall rules in addition to creating a XAMPP server with Ubuntu operation system. This is almost similar to my previous article about the Amazon EC2 setup. Try this and enrich your side projects.','assets/img/product/inspired-product/i41.png',10,'March','Web Development'),
    new Blog(10,'PayPal Express Checkout with React JS and PHP RESTful','There are several payment options available in the market today. PayPal checkout option is one among them. In my previous articles, I have already discussed few payment options - Braintree PayPal using PHP, Payment system and PayPal Express Checkout with PHP and MySQL. These are the most viewed and trending articles till this day. Today, let’s see how the PayPal Express Checkout works with React JS.','assets/img/product/inspired-product/i20.png',16,'April','Web Development'),
    new Blog(16,'React JS and PHP Restful API User Authentication for Login and Signup.','Here is the continued article on my previous post for creating a welcome with login and logout using ReactJS. Today’s post explains how to implement login authentication system for your React JS applications. It will show you how to log in with a user and store the user session, so it deals with token-based authentication. Since we are using token-based authentication, it protects if any unauthorized request is made and notices for a new login if required. This makes your application’s authentication to be more secure compared with any other authentication system. Every user details will be stored in an external database and a PHP based API is used in the backend for handling this authentication. Hope you’ll find it more easily using this as your authentication system in your ReactJS projects. Let’s look into the live demo and follow the below code.','assets/img/product/inspired-product/i26.png',23,'Oct','Web Development'),
    new Blog(22,'Install XAMPP 7.0 on Ubuntu and Mac OSx using Redis and Memcached Extensions','Now, it’s time to update your PHP web server. We had few vulnerabilities with previous versions like openSSL and others. PHP 7 is very fast, advanced and has improved execution time. XAMPP is the most popular PHP development environment, it saves time and effort by providing easy way to install Apache-MySQL-PHP framework. This post helps you how to install XAMPP 7.0 with Redis and memcached extensions for Ubuntu and Mac operating systems. Follow the below steps to install XAMPP.','assets/img/product/inspired-product/i42.png',21,'Oct','Web Development'),
    new Blog(23,'Create Token Based RESTful services using Slim PHP Framework','My previous article gives you an understanding of how to develop any application using RESTful APIs. But, mere implementation of API is not enough for making it more effective. It requires a proper authentication and more security. Here is the article for a secured RESTful API on a token basis. An encrypted token, which is generated based on your site id and ip address is sent with the request call; this token is then be used to authenticate to use a RESTful service in your application. Follow the demo below for your reference.','assets/img/product/inspired-product/i43.png',12,'Jan','Web Development'),
    new Blog(24,'Facebook Like Reactions using PHP, MySQL and Jquery.','Just a few days before, Facebook has launched Reactions, an extension of Like button. I succeeded in implementing the same in my WallScript 8, Build Your Own Social Network. Here is a quick and easy way to implement the Reactions using PHP,Jquery and PDO MySQL. It’s a basic idea of implementing the Reactions. Hope you enjoy the new Reactions for Like button..! Take a quick look at the live demo.','assets/img/product/inspired-product/i44.png',10,'Feb','Web Development'),
  ]

  ionicblog:Blog[]=[
    new Blog(1,'Event Emitters Component Interactions in Angular Ionic','This article is more about understanding the Event Emitters in Angular and Ionic. Data flow is the most important when you build an application to communicate with components. Event Emitters will help you to even bind using @Input @Output decorators. Here is a simple example to display and update the user profile using Angular Event Emitters. For this demo I choose Ionic framework for better experience. Take a quick look at the live demo.','assets/img/product/inspired-product/i11.png',10,'March','Web Development'),
    new Blog(2,'New Ionic 5 Angular 8 Display, Update and Delete Records with RxJS','This post is about displaying the API records with delete and update actions using new Ionic and Angular reactive programming. This is a continuation of Ionic Angular series and it explains to you how to distribute the data between the components using RxJS method like BehaviorSubject. All of the feed API responses/records storing in a reactive object, This help the application DOM works seamlessly with update and delete operations. Implement this to your side project and enrich your applications.','assets/img/product/inspired-product/i12.png',1,'Nov','Web Development'),
    new Blog(4,'Angular 8 Lazy Load Routing.','Angular announced a new version 8.0 and its improved few methods and the compiler to reduce the bundle size 40% less. Now time to update my previous article Angular Routing with Lazy loading Design Pattern. This post is about how to upgrade your Angular 7 application with Angular 8 configurations and changing the lazy load routing with Angular 8 loadChilder promise method. Take a look the setup video to understand more.','assets/img/product/inspired-product/i14.png',6,'June','Web Development'),
    new Blog(25,'Ionic 5 and Angular 8: Create a Welcome Page with Tabs Home Pages.','I received lots of tutorial requests from my readers in that most of them asked me, how to use Ionic 5 to create a welcome page with login and signup pages. Ionic updated there code base with latest Angular 8 features. Now we can implement the routes and guards pretty easy way. Ionic is recommending to use Capacitor to generate iOS and Android. This post will explain to you how to design an Ionic project structure with social project related pages like messages, feed, notifications, etc. Finally converting this web Ionic project to iOS and Android applications.','assets/img/product/inspired-product/i45.png',18,'Aug','Web Development'),
    new Blog(26,'Getting Started with Ionic React and Capacitor','Ionic is the most popular framework for Angular mobile application development. Now Ionic announced with React beta and Vue Js. This post is about getting started with Ionic React with Capacitor(Ionic Product). The Capacitor is a native bride for Cross-Platform for building universal applications. This blog post will explain how to set up a react project using Ionic mobile components and generating iOS, Android and Desktop(Electron framework build) applications.','assets/img/product/inspired-product/i46.png',19,'May','Web Development'),
    new Blog(27,'Ionic Electron Desktop App','Ionic has an excellent Angular framework for creating mobile applications for iOS and Android. Ionic team is planning to launch an update with Angular 6.0 version, right now Ionic 4.0 is in beta development. This post is about using ElectronJS for JavaScript based applications, using this you can convert an application into a Desktop application for MacOS, Windows and Linux. Take a look at this article and follow the steps to generate a desktop application for Ionic.','assets/img/product/inspired-product/i47.png',14,'Oct','Web Development'),
  ]

  angularblog:Blog[]=[
    new Blog(28,'Create Angular NPM Package and Publish','Are you interested to create and publish NPM packages/libraries to enrich Angular functionality? Take a quick look at this post. You can share solutions with other developers. A simple package can solve many problems and resolve the issue quickly. If you are working with multiple applications? Package approach will help you to solve the components problems easily. In this post I have created the Bootstrap confirm functionality package with control options and published it on NPM repository for global use.','assets/img/product/inspired-product/i48.png',19,'May','Web Development'),
    new Blog(1,'Event Emitters Component Interactions in Angular Ionic','This article is more about understanding the Event Emitters in Angular and Ionic. Data flow is the most important when you build an application to communicate with components. Event Emitters will help you to even bind using @Input @Output decorators. Here is a simple example to display and update the user profile using Angular Event Emitters. For this demo I choose Ionic framework for better experience. Take a quick look at the live demo.','assets/img/product/inspired-product/i11.png',10,'March','Web Development'),
    new Blog(2,'New Ionic 5 Angular 8 Display, Update and Delete Records with RxJS','This post is about displaying the API records with delete and update actions using new Ionic and Angular reactive programming. This is a continuation of Ionic Angular series and it explains to you how to distribute the data between the components using RxJS method like BehaviorSubject. All of the feed API responses/records storing in a reactive object, This help the application DOM works seamlessly with update and delete operations. Implement this to your side project and enrich your applications.','assets/img/product/inspired-product/i12.png',1,'Nov','Web Development'),
    new Blog(3,'Ionic 5 and Angular 8: Restful API User Authentication Login and Signup using Guard and Resolver','This is a continuation of my previous article creating an Ionic Angular project with welcome and tabs home page. Today’s post explains how to implement login authentication system for your Ionic Angular application with guards and resolvers. It will show you how to log in with a user and store the user data and protect the routes, so it deals with token-based authentication. Every user details will be stored in an external database and a PHP based API is used in the backend for handling this authentication.','assets/img/product/inspired-product/i13.png',10,'Sep','Web Development'),
    new Blog(28,'Mock REST Backend Server for Angular and React Applications.','As I promised to continue the Angular/Ionic project series, as a developer perspective mock server is the most important to progress the development. We should not depend on the production or development API for front-end development. This post is about creating a simple Node Express server with mock JSON object files. You can import the project to any of the front-end applications like Angular, React, Ionic and VueJS projects.','assets/img/product/inspired-product/i49.png',27,'Aug','Web Development'),
    new Blog(25,'Ionic 5 and Angular 8: Create a Welcome Page with Tabs Home Pages.','I received lots of tutorial requests from my readers in that most of them asked me, how to use Ionic 5 to create a welcome page with login and signup pages. Ionic updated there code base with latest Angular 8 features. Now we can implement the routes and guards pretty easy way. Ionic is recommending to use Capacitor to generate iOS and Android. This post will explain to you how to design an Ionic project structure with social project related pages like messages, feed, notifications, etc. Finally converting this web Ionic project to iOS and Android applications.','assets/img/product/inspired-product/i45.png',18,'Aug','Web Development'),
    new Blog(9,'Social Login using Angular and RESTful APIs','There are a number of advantages to implementing social login in your web applications. First of all, it best secures the user credentials, the user can use a single login for accessing multiple sites, this can automatically access the user details for further use, and many such. This article is about how to implement the social login with Facebook and Google using Angular and RESTful API. This social login helps to store social data of the logged in user into the database, so that it provides you valid user data like email, name, and others. Let’s see how this works, follow the live demo and code below.','assets/img/product/inspired-product/i19.png',29,'July','Web Development'),
  ]

  reactblog:Blog[]=[
    new Blog(28,'Mock REST Backend Server for Angular and React Applications.','As I promised to continue the Angular/Ionic project series, as a developer perspective mock server is the most important to progress the development. We should not depend on the production or development API for front-end development. This post is about creating a simple Node Express server with mock JSON object files. You can import the project to any of the front-end applications like Angular, React, Ionic and VueJS projects.','assets/img/product/inspired-product/i49.png',27,'Aug','Web Development'),
    new Blog(26,'Getting Started with Ionic React and Capacitor','Ionic is the most popular framework for Angular mobile application development. Now Ionic announced with React beta and Vue Js. This post is about getting started with Ionic React with Capacitor(Ionic Product). The Capacitor is a native bride for Cross-Platform for building universal applications. This blog post will explain how to set up a react project using Ionic mobile components and generating iOS, Android and Desktop(Electron framework build) applications.','assets/img/product/inspired-product/i46.png',19,'May','Web Development'),
    new Blog(10,'PayPal Express Checkout with React JS and PHP RESTful','There are several payment options available in the market today. PayPal checkout option is one among them. In my previous articles, I have already discussed few payment options - Braintree PayPal using PHP, Payment system and PayPal Express Checkout with PHP and MySQL. These are the most viewed and trending articles till this day. Today, let’s see how the PayPal Express Checkout works with React JS.','assets/img/product/inspired-product/i20.png',16,'April','Web Development'),
  ]

  jqueryblog:Blog[]=[
    new Blog(24,'Facebook Like Reactions using PHP, MySQL and Jquery.','Just a few days before, Facebook has launched Reactions, an extension of Like button. I succeeded in implementing the same in my WallScript 8, Build Your Own Social Network. Here is a quick and easy way to implement the Reactions using PHP,Jquery and PDO MySQL. It’s a basic idea of implementing the Reactions. Hope you enjoy the new Reactions for Like button..! Take a quick look at the live demo.','assets/img/product/inspired-product/i44.png',10,'Feb','Web Development'),
    new Blog(29,'Integrate CKEditor in Html Page using JavaScript','CKEditor is a rich web text editor, which can be used inside your HTML web pages. This HTML text editor allows many of the powerful editing functions found on desktop editors like Microsoft Word to your web. This is featured with many advantages like preparing your mail content, creating your blogs and so on. This post also explains you how to further modify or use your text editor in many ways, which may include show / hide buttons, control the buttons, etc,.','assets/img/product/inspired-product/i50.png',18,'Apr','Web Development'),
    new Blog(30,'Track HTML5 Video Views with Google Analytics','Is there a simple solution to track viewers engagement, if you have published HTML 5 video on the web? Yes. You can use combination of Google Analytics and very few lines of coding to see detailed video engagement analytics. You can track total number of viewers for your video, number of viewers who has just watched minimum percentage of video you have mentioned, number of viewers who has completed watching the video and many such analytics could be found using Google Analytics. Let’s see how far you are utilizing Google Analytics for such great analysis of your posted content on the web. Have a look at the demo..!','assets/img/product/inspired-product/i51.png',27,'Apr','Web Development'),
    new Blog(31,'Custom Audio Player with Jquery Audio Controls Plugin','Introducing the new jquery AudioControls plugin for custom web HTML5 audio players, this helps you to make fastest audio player system for your web projects. This plugin actually works with HTML5 <audio> tag, create your own player design and just apply plugin data attributes to the HTML elements. First version supports basic audio controls, we are going to improve this in future Thanks!','assets/img/product/inspired-product/i52.png',20,'May','Web Development'),
    new Blog(32,'Google Charts with Jquery Ajax','If you are working for analytics project, you need a rich chart system to display big data results. Google is providing us a powerful chart tools that you can implement charts very simple, this tutorial will explain you how to implement Google charts with Jquery ajax JSON data. Try out there are many free interactive charts and data tools, take a quick look at this live demo.','assets/img/product/inspired-product/i53.png',27,'Apr','Web Development'),
    new Blog(33,'Audio Recording with Custom Audio Player using Jquery and HTML5','Few days back one of my friend sent me an audio message in Facebook messenger, the moment I was realized that I haven’t covered this audio recording system on 9lessons.info. Today I want to discuss how to publish a voice recording messages on newsfeed using Jquery and HTML5 with custom HTML5 audio player. Take a quick look at the live demo, make sure use the microphone for better result.','assets/img/product/inspired-product/i54.png',18,'Mar','Web Development'),
  ]

  homeblog:Blog[]=[
    new Blog(2,'New Ionic 5 Angular 8 Display, Update and Delete Records with RxJS','This post is about displaying the API records with delete and update actions using new Ionic and Angular reactive programming. This is a continuation of Ionic Angular series and it explains to you how to distribute the data between the components using RxJS method like BehaviorSubject. All of the feed API responses/records storing in a reactive object, This help the application DOM works seamlessly with update and delete operations. Implement this to your side project and enrich your applications.','assets/img/product/inspired-product/i12.png',1,'Nov','Web Development'),
    new Blog(25,'Ionic 5 and Angular 8: Create a Welcome Page with Tabs Home Pages.','I received lots of tutorial requests from my readers in that most of them asked me, how to use Ionic 5 to create a welcome page with login and signup pages. Ionic updated there code base with latest Angular 8 features. Now we can implement the routes and guards pretty easy way. Ionic is recommending to use Capacitor to generate iOS and Android. This post will explain to you how to design an Ionic project structure with social project related pages like messages, feed, notifications, etc. Finally converting this web Ionic project to iOS and Android applications.','assets/img/product/inspired-product/i45.png',18,'Aug','Web Development'),
    new Blog(9,'Social Login using Angular and RESTful APIs','There are a number of advantages to implementing social login in your web applications. First of all, it best secures the user credentials, the user can use a single login for accessing multiple sites, this can automatically access the user details for further use, and many such. This article is about how to implement the social login with Facebook and Google using Angular and RESTful API. This social login helps to store social data of the logged in user into the database, so that it provides you valid user data like email, name, and others. Let’s see how this works, follow the live demo and code below.','assets/img/product/inspired-product/i19.png',29,'July','Web Development'),
  ]

  constructor(private http:HttpClient) { }

getJavaScriptBlog():Blog[]{
  return this.products;
}

getPhpBlog():Blog[]{
  return this.phpblog;
}

getIonicBlog():Blog[]{
  return this.ionicblog;
}

getAngularBlog():Blog[]{
  return this.angularblog;
}

getReactBlog():Blog[]{
  return this.reactblog;
}

getJqueryBlog():Blog[]{
  return this.jqueryblog;
}

getHomeBlog():Blog[]{
  return this.homeblog;
}

postblogdata(blog:Blog){
  return this.http.post(this.baseURL,blog);
 
}

getblogdata(){
  return this.http.get(this.baseURL);
}

getblogdatadetails(_id:number){
  return this.http.get(this.baseURL+  `/${_id}`);
  }
  
}
